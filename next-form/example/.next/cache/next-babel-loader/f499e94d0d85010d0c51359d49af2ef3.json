{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alex/dev/js-is-php/next-form/example/components/Layout.tsx\";\nimport { useRouter } from \"next/dist/client/router\";\nimport Link from \"next/link\";\nconst routes = [[\"/\", \"Formik\"], [\"/vanilla\", \"Vanilla form with HTTP post and no JS\"], [\"/formik-scaffold\", \"Scaffolding\"]];\nexport function Layout(props) {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          children: routes.map(([to, title]) => /*#__PURE__*/_jsxDEV(Link, {\n            href: to,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: to === router.pathname ? \"active\" : \"\",\n              children: title\n            }, to, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)\n          }, to, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"About what you're looking at\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"We're using \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"getServerSideProps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), \" to receive\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"POST\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), \" data.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Validates and adds to the db on the server with \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"/api\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 61\n          }, this), \"-endpoints.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Reuses same zod schemas in server & client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"TypeScript types are inferred to client.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Data is reset whenever app is restarted or when Vercel's lambda gets cold.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Try disabling JS in your browser. Page still works fine.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"This is a hack. You should (probably?) not do this. I just got the idea and did this as an exercise. The talks about React\\xA0Server\\xA0Components made me I miss the old PHP-days where I could just fetch data from the db and display it. Wanted to see if I could do something remotely similar with React and TypeScript. Next's \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"getServerSideProps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 32\n          }, this), \" is the closest thing.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Made by \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://twitter.com/alexdotjs\",\n            children: \"@alexdotjs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), \". Source at\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/KATT/js-is-php\",\n            children: \"github.com/KATT/js-is-php\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/alex/dev/js-is-php/next-form/example/components/Layout.tsx"],"names":["useRouter","Link","routes","Layout","props","router","map","to","title","pathname","children"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,yBAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,MAAMC,MAA0B,GAAG,CACjC,CAAC,GAAD,EAAM,QAAN,CADiC,EAEjC,CAAC,UAAD,EAAa,uCAAb,CAFiC,EAGjC,CAAC,kBAAD,EAAqB,aAArB,CAHiC,CAAnC;AAMA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAgD;AACrD,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,+BACE;AAAA,oBACGE,MAAM,CAACI,GAAP,CAAW,CAAC,CAACC,EAAD,EAAKC,KAAL,CAAD,kBACV,QAAC,IAAD;AAAM,YAAA,IAAI,EAAED,EAAZ;AAAA,mCACE;AAAY,cAAA,SAAS,EAAEA,EAAE,KAAKF,MAAM,CAACI,QAAd,GAAyB,QAAzB,GAAoC,EAA3D;AAAA,wBACGD;AADH,eAAQD,EAAR;AAAA;AAAA;AAAA;AAAA;AADF,aAAqBA,EAArB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAA,kBAAOH,KAAK,CAACM;AAAb;AAAA;AAAA;AAAA;AAAA,cAZF,eAcE;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AAAA,gCACE;AAAA,kDACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADd,iBACyD,GADzD,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,sFACkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eAgBE;AAAA,4WAMqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANrB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eA0CE;AAAA;AAAA;AAAA;AAAA,cA1CF,eA2CE;AAAA,+BACE;AAAA,8CACU;AAAG,YAAA,IAAI,EAAC,+BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADV,iBAEY,GAFZ,eAGE;AAAG,YAAA,IAAI,EAAC,mCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyDD","sourcesContent":["import { useRouter } from \"next/dist/client/router\";\nimport Link from \"next/link\";\nimport { ReactNode } from \"react\";\n\nconst routes: [string, string][] = [\n  [\"/\", \"Formik\"],\n  [\"/vanilla\", \"Vanilla form with HTTP post and no JS\"],\n  [\"/formik-scaffold\", \"Scaffolding\"],\n];\n\nexport function Layout(props: { children: ReactNode }) {\n  const router = useRouter();\n\n  return (\n    <>\n      <div className='wrapper'>\n        <header>\n          <nav>\n            {routes.map(([to, title]) => (\n              <Link href={to} key={to}>\n                <a key={to} className={to === router.pathname ? \"active\" : \"\"}>\n                  {title}\n                </a>\n              </Link>\n            ))}\n          </nav>\n        </header>\n        <main>{props.children}</main>\n\n        <hr />\n        <h2>About what you're looking at</h2>\n        <ul>\n          <li>\n            We're using <code>getServerSideProps</code> to receive{\" \"}\n            <code>POST</code> data.\n          </li>\n          <li>\n            Validates and adds to the db on the server with <code>/api</code>\n            -endpoints.\n          </li>\n          <li>Reuses same zod schemas in server &amp; client</li>\n          <li>TypeScript types are inferred to client.</li>\n          <li>\n            Data is reset whenever app is restarted or when Vercel's lambda gets\n            cold.\n          </li>\n          <li>Try disabling JS in your browser. Page still works fine.</li>\n          <li>\n            This is a hack. You should (probably?) not do this. I just got the\n            idea and did this as an exercise. The talks about\n            React&nbsp;Server&nbsp;Components made me I miss the old PHP-days\n            where I could just fetch data from the db and display it. Wanted to\n            see if I could do something remotely similar with React and\n            TypeScript. Next's <code>getServerSideProps</code> is the closest\n            thing.\n          </li>\n        </ul>\n        <hr />\n        <footer>\n          <p>\n            Made by <a href='https://twitter.com/alexdotjs'>@alexdotjs</a>.\n            Source at{\" \"}\n            <a href='https://github.com/KATT/js-is-php'>\n              github.com/KATT/js-is-php\n            </a>\n          </p>\n        </footer>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}