{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alex/dev/js-is-php/next-form/example/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ProgressBar } from 'components/ProgressBar';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useState } from 'react';\nimport { createForm } from 'next-form';\nimport { prettyDate } from 'utils/prettyDate';\nimport * as z from 'zod';\nexport var __N_SSP = true;\nexport var createPostForm = createForm({\n  schema: z.object({\n    from: z.string().min(2),\n    message: z.string().min(4)\n  }),\n  defaultValues: {\n    message: '',\n    from: ''\n  },\n  formId: 'createPost'\n});\nexport default function Home(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(props.posts),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(createPostForm.getFeedbackFromProps(props)),\n      feedback = _useState2[0],\n      setFeedback = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Formik \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"noscript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Uses Formik to HTTP post to Next.js' special page endpoint (\", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"_next/data/[..]/[..].json\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \") then re-renders the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \" from the response\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This page works without JavaScript enabled!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My guestbook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), posts.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"From \", item.from, \" at \", prettyDate(item.createdAt), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: item.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, _this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: createPostForm.getInitialValues(props),\n      initialErrors: createPostForm.getInitialErrors(props),\n      initialTouched: createPostForm.getInitialTouched(props),\n      validate: createPostForm.formikValidator,\n      onSubmit: /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, actions) {\n          var _newProps$createPost$, _yield$createPostForm, newProps, _feedback;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  setFeedback(null);\n                  _context.next = 4;\n                  return createPostForm.clientRequest({\n                    values: values,\n                    props: props\n                  });\n\n                case 4:\n                  _yield$createPostForm = _context.sent;\n                  newProps = _yield$createPostForm.newProps;\n                  _feedback = createPostForm.getFeedbackFromProps(newProps);\n\n                  if (_feedback) {\n                    _context.next = 9;\n                    break;\n                  }\n\n                  throw new Error(\"Didn't receive feedback from props\");\n\n                case 9:\n                  if ((_newProps$createPost$ = newProps.createPost.response) === null || _newProps$createPost$ === void 0 ? void 0 : _newProps$createPost$.success) {\n                    console.log('added post with id', newProps.createPost.response.data.id);\n                  }\n\n                  setFeedback(_feedback);\n\n                  if (_feedback.state === 'success') {\n                    setPosts(newProps.posts); // refresh posts\n\n                    actions.resetForm();\n                  }\n\n                  _context.next = 17;\n                  break;\n\n                case 14:\n                  _context.prev = 14;\n                  _context.t0 = _context[\"catch\"](0);\n                  setFeedback({\n                    state: 'error',\n                    error: _context.t0\n                  });\n\n                case 17:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 14]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref2) {\n        var isSubmitting = _ref2.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          method: \"post\",\n          action: props.createPost.endpoints.action,\n          children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n            loading: isSubmitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"from\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"from\",\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"from\",\n              component: \"span\",\n              className: \"field__error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"message\",\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"textarea\",\n              name: \"message\",\n              as: \"textarea\",\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"message\",\n              component: \"span\",\n              className: \"field__error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, _this), (feedback === null || feedback === void 0 ? void 0 : feedback.state) === 'success' && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"feedback success\",\n            children: \"Yay! Your entry was added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, _this), (feedback === null || feedback === void 0 ? void 0 : feedback.state) === 'error' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feedback error\",\n              children: [\"Something went wrong: \", feedback.error.message, \". Full Error:\", ' ', /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: JSON.stringify(_objectSpread(_objectSpread({}, feedback.error), {}, {\n                  message: feedback.error.message,\n                  stack: feedback.error.stack\n                }), null, 4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false), isSubmitting && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"feedback\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 30\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"xt+w4XsXfSCigIVDdlnTKV6q6VU=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/alex/dev/js-is-php/next-form/example/pages/index.tsx"],"names":["ProgressBar","ErrorMessage","Field","Form","Formik","useState","createForm","prettyDate","z","createPostForm","schema","object","from","string","min","message","defaultValues","formId","Home","props","posts","setPosts","getFeedbackFromProps","feedback","setFeedback","map","item","createdAt","id","getInitialValues","getInitialErrors","getInitialTouched","formikValidator","values","actions","clientRequest","newProps","Error","createPost","response","success","console","log","data","state","resetForm","error","isSubmitting","endpoints","action","JSON","stringify","stack"],"mappings":"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","sourcesContent":["import { ProgressBar } from 'components/ProgressBar';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { GetServerSidePropsContext, InferGetServerSidePropsType } from 'next';\nimport { useRouter } from 'next/dist/client/router';\nimport { useState } from 'react';\nimport { createForm } from 'next-form';\nimport { prettyDate } from 'utils/prettyDate';\nimport * as z from 'zod';\nimport { DB } from '../utils/db';\n\nexport const createPostForm = createForm({\n  schema: z.object({\n    from: z.string().min(2),\n    message: z.string().min(4),\n  }),\n  defaultValues: {\n    message: '',\n    from: '',\n  },\n  formId: 'createPost',\n});\n\ntype Props = InferGetServerSidePropsType<typeof getServerSideProps>;\n\nexport default function Home(props: Props) {\n  const [posts, setPosts] = useState(props.posts);\n  const [feedback, setFeedback] = useState(\n    createPostForm.getFeedbackFromProps(props)\n  );\n\n  return (\n    <>\n      <h1>\n        Formik <code>noscript</code>\n      </h1>\n      <p>\n        Uses Formik to HTTP post to Next.js' special page endpoint (\n        <code>_next/data/[..]/[..].json</code>) then re-renders the{' '}\n        <code>posts</code> from the response\n      </p>\n      <p>This page works without JavaScript enabled!</p>\n\n      <h2>My guestbook</h2>\n      {posts.map(item => (\n        <article key={item.id}>\n          <strong>\n            From {item.from} at {prettyDate(item.createdAt)}:\n          </strong>\n          <p className=\"message\">{item.message}</p>\n        </article>\n      ))}\n      <h3>Add post</h3>\n\n      <Formik\n        initialValues={createPostForm.getInitialValues(props)}\n        initialErrors={createPostForm.getInitialErrors(props)}\n        initialTouched={createPostForm.getInitialTouched(props)}\n        validate={createPostForm.formikValidator}\n        onSubmit={async (values, actions) => {\n          try {\n            setFeedback(null);\n            const { newProps } = await createPostForm.clientRequest({\n              values,\n              props,\n            });\n\n            const feedback = createPostForm.getFeedbackFromProps(newProps);\n            if (!feedback) {\n              throw new Error(\"Didn't receive feedback from props\");\n            }\n            if (newProps.createPost.response?.success) {\n              console.log(\n                'added post with id',\n                newProps.createPost.response.data.id\n              );\n            }\n            setFeedback(feedback);\n            if (feedback.state === 'success') {\n              setPosts(newProps.posts); // refresh posts\n              actions.resetForm();\n            }\n          } catch (error) {\n            setFeedback({\n              state: 'error',\n              error,\n            });\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form method=\"post\" action={props.createPost.endpoints.action}>\n            <ProgressBar loading={isSubmitting} />\n            <p className=\"field\">\n              <label htmlFor=\"from\">Name</label>\n              <br />\n              <Field type=\"text\" name=\"from\" disabled={isSubmitting} />\n              <br />\n              <ErrorMessage\n                name=\"from\"\n                component=\"span\"\n                className=\"field__error\"\n              />\n            </p>\n            <p className=\"field\">\n              <label htmlFor=\"message\">Message</label>\n              <br />\n              <Field\n                type=\"textarea\"\n                name=\"message\"\n                as=\"textarea\"\n                disabled={isSubmitting}\n              />\n              <br />\n              <ErrorMessage\n                name=\"message\"\n                component=\"span\"\n                className=\"field__error\"\n              />\n            </p>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n\n            <br />\n            {feedback?.state === 'success' && (\n              <span className=\"feedback success\">\n                Yay! Your entry was added\n              </span>\n            )}\n\n            {feedback?.state === 'error' && (\n              <>\n                <span className=\"feedback error\">\n                  Something went wrong: {feedback.error.message}. Full Error:{' '}\n                  <pre>\n                    {JSON.stringify(\n                      {\n                        ...feedback.error,\n                        message: feedback.error.message,\n                        stack: feedback.error.stack,\n                      },\n                      null,\n                      4\n                    )}\n                  </pre>\n                </span>\n              </>\n            )}\n            {isSubmitting && <span className=\"feedback\">Loading...</span>}\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport const getServerSideProps = async (ctx: GetServerSidePropsContext) => {\n  const createPostProps = await createPostForm.getPageProps({\n    ctx,\n    async mutation(input) {\n      if (Math.random() < 0.3) {\n        throw new Error('Emulating the mutation failing');\n      }\n      return DB.createPost(input);\n    },\n  });\n\n  return {\n    props: {\n      ...createPostProps,\n      posts: await DB.getAllPosts(),\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}